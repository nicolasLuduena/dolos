diff --git a/Cargo.lock b/Cargo.lock
index b650199..41b9f39 100644
--- a/Cargo.lock
+++ b/Cargo.lock
@@ -5060,8 +5060,6 @@ checksum = "e421abadd41a4225275504ea4d6566923418b7f05506fbc9c0fe86ba7396114b"
 [[package]]
 name = "tx3-cardano"
 version = "0.11.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "ca5f14e3e1b68b1bff81d58c891604a3087f34be70c2a2ad58a8605b6f15ed82"
 dependencies = [
  "hex",
  "pallas 1.0.0-alpha.2 (registry+https://github.com/rust-lang/crates.io-index)",
@@ -5075,8 +5073,6 @@ dependencies = [
 [[package]]
 name = "tx3-lang"
 version = "0.11.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "7607218726810f53079b50a63ff4b5e25a8ccf53a82a80d7b6cc1815feec7a65"
 dependencies = [
  "bincode 2.0.1",
  "hex",
@@ -5091,8 +5087,6 @@ dependencies = [
 [[package]]
 name = "tx3-resolver"
 version = "0.11.4"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "654a0598f575d665145dc711443082683d66a0fc8a4673e68dbc1f314d87d028"
 dependencies = [
  "hex",
  "thiserror 2.0.12",
@@ -5103,8 +5097,6 @@ dependencies = [
 [[package]]
 name = "tx3-sdk"
 version = "0.8.0"
-source = "registry+https://github.com/rust-lang/crates.io-index"
-checksum = "8e249299616f099372b45ff1605900671697547bd6691ca154f0aa36dc665cbc"
 dependencies = [
  "base64 0.22.1",
  "bech32 0.11.0",
diff --git a/crates/trp/Cargo.toml b/crates/trp/Cargo.toml
index bf5b468..98b0ff5 100644
--- a/crates/trp/Cargo.toml
+++ b/crates/trp/Cargo.toml
@@ -24,20 +24,27 @@ jsonrpsee = { version = "0.24.9", features = ["server"] }
 opentelemetry = "0.30.0"
 opentelemetry_sdk = "0.30.0"
 
-tx3-lang = "0.11.4"
-tx3-cardano = "0.11.4"
-tx3-resolver = "0.11.4"
+# tx3-lang = "0.11.4"
+# tx3-cardano = "0.11.4"
+# tx3-resolver = "0.11.4"
 
 # tx3-lang = { path = "../../../../tx3-lang/tx3/crates/tx3-lang" }
 # tx3-cardano = { path = "../../../../tx3-lang/tx3/crates/tx3-cardano" }
 # tx3-resolver = { path = "../../../../tx3-lang/tx3/crates/tx3-resolver" }
 
+tx3-lang = { path = "/home/sbobbiesi/Documents/TX3/tx3/crates/tx3-lang" }
+tx3-cardano = { path = "/home/sbobbiesi/Documents/TX3/tx3/crates/tx3-cardano" }
+tx3-resolver = { path = "/home/sbobbiesi/Documents/TX3/tx3/crates/tx3-resolver" }
+
 # tx3-lang = { git = "https://github.com/tx3-lang/tx3.git" }
 # tx3-cardano = { git = "https://github.com/tx3-lang/tx3.git" }
 # tx3-resolver = { git = "https://github.com/tx3-lang/tx3.git" }
+# tx3-sdk = { version = "^0" }
 
-tx3-sdk = { version = "^0" }
 # tx3-sdk = { path = "../../../../tx3-lang/rust-sdk/sdk" }
+# tx3-sdk = { version = "0.4.0" }
+
+tx3-sdk = { path = "/home/sbobbiesi/Documents/TX3/rust-sdk/sdk" }
 # tx3-sdk = { git = "https://github.com/tx3-lang/rust-sdk.git" }
 
 [dev-dependencies]
diff --git a/crates/trp/src/mapping.rs b/crates/trp/src/mapping.rs
index 7ca35ef..32e4b69 100644
--- a/crates/trp/src/mapping.rs
+++ b/crates/trp/src/mapping.rs
@@ -77,9 +77,9 @@ fn map_array(x: &[PlutusData]) -> Expression {
 }
 
 fn map_map(x: &KeyValuePairs<PlutusData, PlutusData>) -> Expression {
-    Expression::List(
+    Expression::Map(
         x.iter()
-            .map(|(k, v)| Expression::List(vec![map_datum(k), map_datum(v)]))
+            .map(|(k, v)| (map_datum(k), map_datum(v)))
             .collect(),
     )
 }
diff --git a/crates/trp/src/methods.rs b/crates/trp/src/methods.rs
index 23ed6f3..9fe771d 100644
--- a/crates/trp/src/methods.rs
+++ b/crates/trp/src/methods.rs
@@ -193,7 +193,7 @@ mod tests {
     const SUBJECT_PROTOCOL: &str = r#"
         party Sender;
         party Receiver;
-    
+
         tx swap(quantity: Int) {
             input source {
                 from: Sender,
@@ -286,4 +286,228 @@ mod tests {
 
         assert_eq!(err.code(), ErrorCode::InvalidParams.code());
     }
+
+    fn setup_gh_test_context() -> Arc<Context<ToyDomain>> {
+        let delta = dolos_testing::make_custom_utxo_delta(
+            1,
+            dolos_testing::TestAddress::everyone(),
+            2..4,
+            |x: &dolos_testing::TestAddress| {
+                dolos_testing::utxo_with_random_amount(x, 4_000_000..5_000_000)
+            },
+        );
+
+        let domain = ToyDomain::new(Some(delta), None);
+
+        Arc::new(Context {
+            domain,
+            config: Arc::new(Config {
+                max_optimize_rounds: 3,
+                extra_fees: None,
+
+                // next are dummy, not used
+                listen_address: "[::]:1234".parse().unwrap(),
+                permissive_cors: None,
+            }),
+            metrics: Metrics::default(),
+        })
+    }
+
+    const GH_DEPLOY_PROTOCOL: &str = r#"
+        party GitHoneyAddr;
+        party Script;
+
+        type CardanoAddress {
+            payment_credential: CardanoCredential,
+            staking_credential: OptionAddressCardanoCredential,
+        }
+        type SettingsDatum {
+            githoney_address: CardanoAddress,
+            bounty_creation_fee: Int,
+            bounty_reward_fee: Int,
+        }
+
+        type CardanoCredential {
+            VerificationKey {
+                VerificationKey: Bytes,
+            },
+            Script {
+                Script: Bytes,
+            },
+        }
+
+        type StakeCredWrapper {
+            Inline {
+                VerificationKey: CardanoCredential,
+            },
+            Pointer {
+                slotNumber: Int,
+                transactionIndex: Int,
+                certificateIndex: Int,
+            },
+        }
+
+        type OptionAddressCardanoCredential {
+            Some {
+                stakeCredetial: StakeCredWrapper,
+            },
+            None,
+        }
+
+        tx deploy(
+            bountyCreationFee: Int,
+            bountyRewardFee: Int,
+            githoneyPaymentCredential: Bytes,
+            githoneyScript: Bytes,
+            githoneyStakingCredential: Bytes,
+            scriptVersion: Int,
+            settingsMintingPolicy: Bytes,
+            settingsMintingVersion: Int,
+            settingsPolicyId: Bytes,
+            settingsTokenName: Bytes,
+            utxoRef: UtxoRef,
+        ) {
+
+            input githoney_wallet {
+                ref: utxoRef,
+            }
+
+            collateral {
+                from: GitHoneyAddr,
+                min_amount: Ada(5000000),
+            }
+
+            mint {
+                amount: AnyAsset(settingsPolicyId, settingsTokenName, 1),
+                redeemer: (),
+            }
+
+            output settings_utxo {
+                to: Script,
+                ref_script: { script: githoneyScript, version: scriptVersion, },
+                amount: min_utxo(settings_utxo) + AnyAsset(settingsPolicyId, settingsTokenName, 1),
+                datum: SettingsDatum {
+                    githoney_address: CardanoAddress {
+                        payment_credential: CardanoCredential::VerificationKey {
+                            VerificationKey: githoneyPaymentCredential,
+                        },
+                        staking_credential: OptionAddressCardanoCredential::Some {
+                            stakeCredetial: StakeCredWrapper::Inline {
+                                VerificationKey: CardanoCredential::VerificationKey {
+                                    VerificationKey: githoneyStakingCredential,
+                                },
+                            },
+                        },
+                    },
+                    bounty_creation_fee: bountyCreationFee,
+                    bounty_reward_fee: bountyRewardFee,
+                },
+            }
+
+            output change {
+                to: GitHoneyAddr,
+                amount: githoney_wallet - fees - min_utxo(settings_utxo),
+            }
+
+            cardano::plutus_witness {
+                version: settingsMintingVersion,
+                script: settingsMintingPolicy,
+            }
+        }
+    "#;
+
+    async fn attempt_resolve_gh_deploy(
+        args: &serde_json::Value,
+    ) -> Result<serde_json::Value, ErrorObjectOwned> {
+        let protocol = tx3_lang::Protocol::from_string(GH_DEPLOY_PROTOCOL.to_owned())
+            .load()
+            .unwrap();
+
+        let tx = protocol.new_tx("deploy").unwrap();
+
+        let ir = tx.apply().unwrap().ir_bytes();
+
+        let req = json!({
+            "tir": {
+                "version": "v1alpha8",
+                "bytecode": hex::encode(ir),
+                "encoding": "hex"
+            },
+            "args": args
+        })
+        .to_string();
+
+        let params = Params::new(Some(req.as_str()));
+
+        let context = setup_gh_test_context();
+
+        let resolved = trp_resolve(params, context.clone()).await?;
+
+        Ok(resolved)
+    }
+
+    #[tokio::test]
+    async fn test_resolve_gh_deploy_happy_path() {
+        let args = json!({
+            "script": "addr_test1wqzf7xsfldf4pz0am80e3d9sjaw3pq0e4lpddav66tuuyzq0f0flt",
+            "githoneyaddr": "addr_test1qqzq2j55hh2ml3h08skfgg04lhh7n7epv2ycn90ntr6ys7zrxalmeg3lyamyahkfwdv6fylkyxj0stj8xpplusva7w7s40czuq",
+            "githoneypaymentcredential": "04054a94bdd5bfc6ef3c2c9421f5fdefe9fb2162898995f358f44878",
+            "githoneystakingcredential": "43377fbca23f27764edec97359a493f621a4f82e473043fe419df3bd",
+            "bountycreationfee": 2000000,
+            "bountyrewardfee": 500,
+            "settingsmintingpolicy": "59075b010100332229800aba4aba2aba1aba0aab9faab9eaab9dab9cab9a4888888888cc896600264653001300b00198059806000cdc3a4001300b0024888966002600460166ea800e26644b30013370e0029000c528c660026e1d200299198008009bac3012300f375400844b30010018a508acc004cdd7980998081baa30130010188a51899801001180a000a01a404523012301330130019ba54800122223233225980099b8748010c050dd500144c96600200313322598009807180b9baa0038992cc00400602913259800800c4c9660020030168992cc00400602f01780bc4cc89660020030198992cc00400603501a80d44c9660026048007159800980b180f9baa0078992cc00400603913259800800c4c96600200301e8992cc0040062b300130280028cc00400e264b3001301b0018992cc00400604313259800800c566002605600513259800980f000c4c9660020030248992cc0040062b3001302e0028cc004006027025405102540ad025812c09604a8178c0b000502a18141baa0028acc004c068006264b300100181244c966002003025812c09626644b3001001813c4c96600200302881440a226644b300100181544c96600200302b815c0ae264b3001303500380d40b10321bad001815a06a303200140c06eb4004c0c400a0508190c0bc00502d1bad001302e002812a05e302c00140a860506ea800a046812902518131baa0018112050811408a04502240b060520028138c094dd50014566002602e00315980098129baa0028074081026408102220443023375400301f403901f409501f80fc07e03e8148c0980050241813001407603b01d80ea04e3024001408860406ea801e03680ea0368108dd6800c0690241810800a03e375a00260400050174084603c00280e0c07800a02b01580ac05501f180e000a03430183754007013405444464b300130100018992cc00400600713259800800c01200900480244c9660026042007006802a03c375c0028108c07800501c180d1baa0048acc004c030006264b3001001801c4c9660020030048024012009132598009810801c01a00a80f0dd7000a042301e001407060346ea801200480b9017180c1baa003159800acc00400a29462a660289212969735f6d696e74696e675f6f6e6c795f6f6e655f73657474696e675f746f6b656e203f2046616c73650014a0809a2b300159800803c528c54cc05124011b69735f6f75747265665f696e5f696e70757473203f2046616c73650014a0809a2b3001300832598009804980b1baa0018a40011375a6034602e6ea8005014192cc004c024c058dd5000c530103d87a8000899198008009bab301b3018375400444b30010018a6103d87a8000899192cc004cdc8a450b73657474696e67734e4654000018acc004cdc7a4410b73657474696e67734e465400001898051980e980d80125eb82298103d87a80004061133004004301f00340606eb8c064004c07000501a20283233001001375660346036602e6ea8014896600200314c103d87a8000899192cc004cdc8807000c56600266e3c0380062601266038603400497ae08a60103d87a8000405d133004004301e003405c6eb8c060004c06c0050194528c54cc0512412269735f73657474696e675f746f6b656e5f696e5f6f7574707574203f2046616c73650014a0809a294101345282026808c046023011406c6030602a6ea800a2a6602692012f65787065637420496e6c696e65446174756d28646174756d29203d207363726970745f6f75747075742e646174756d00164048600660266ea8004c014018c8c966002601460266ea8006264b30013375e6030602a6ea80040722003153301349011161646472657373206d6973736d6174636800164048602e60286ea80062a6602492012c65787065637420536f6d65286f757470757429203d206f757470757473207c3e206c6973742e6174286174290016404530010019bac300330133754011480010011112cc00400a298103d87a80008acc004c02c006260086602e603000497ae08cc00400e6032005337000029000a006404880b08058dd7180798061baa003375a601e6020602064b3001001804c4c96600260240051001805201e375860200028070c8cc004004dd59808180898089808980898069baa0022259800800c52f5c113233223322330020020012259800800c400e2646602c6e9ccc058dd48029980b18098009980b180a000a5eb80cc00c00cc060008c0580050141bab3011003375c601c0026600600660260046022002807a2c80486016002600c6ea8032293454cc01124011856616c696461746f722072657475726e65642066616c73650013656400c2a66004920122657870656374205b696e666f5d203d2074782e6d696e74207c3e20666c617474656e001615330024912d657870656374205f73657474696e67735f646174756d3a2053657474696e6773446174756d203d20646174756d0016260127d8799f5820d1b9de0e40d4b24cc9eceb3e9c6facd1a021096754c8f9b959a8919fca4b3e3e01ff004c0129d8799fd87a9f581c049f1a09fb535089fdd9df98b4b0975d1081f9afc2d6f59ad2f9c208ffd87a80ff0001",
+            "settingspolicyid": "7fb24b2713a4ec77eaa49bc8cafe4092b4be19672a82528ba899a2d8",
+            "settingstokenname": "73657474696e67734e4654",
+            "githoneyscript": "5922fb0101003229800aba4aba2aba1aba0aab9faab9eaab9dab9cab9a9bae0024888888888a60022a660069212c6578706563742073657474696e67735f646174756d3a2053657474696e6773446174756d203d20646174756d00168a99801a4928657870656374205b7265665f696e7075745d203d2074782e7265666572656e63655f696e7075747300168a99801a492c65787065637420676974686f6e65795f646174756d3a20476974686f6e6579446174756d203d20646174756d00168a99801a492765787065637420496e6c696e65446174756d28646174756d293a20446174756d203d206461746100168a99801a4922657870656374205b696e666f5d203d2074782e6d696e74207c3e20666c617474656e00168a99801a4940657870656374205b696e7075745d203d0a20202020696e707574730a2020202020207c3e206c6973742e66696c7465722869735f7363726970745f7574786f2900168a99801a4991657870656374205b5061697228626f756e74795f69645f6e616d652c2031295d203d0a2020202020202f2f20657870656374206f6e6c79206f6e6520626f756e747920746f6b656e2069640a2020202020207363726970745f696e7075742e76616c7565207c3e20746f6b656e7328626f756e74795f69645f706f6c69637929207c3e20646963742e746f5f706169727300168a99801a492372656465656d65723a20476974686f6e6579436f6e747261637452656465656d6572730016488888889660033001300d3754027230113012301230123012301230120019b874800246022602460246024003370e90014dd2a40012301130120019180898091809000cdc3a40092301130123012301230123012301230120019119198008008019119801800980100148c044c048c048c048c048c04800644b30010018a4d13259800800c5268992cc004cdc81bae30103014003375c60200031330040043301300130150028a99807a481326b65797320696e206173736f63696174697665206c697374206172656e277420696e20617363656e64696e67206f726465720016403860260028088c04c005010496600200314a314a0807a444646600200200844b3001001880244ca60026eb8c0480066eb4c04c00666006006602e0048020c0540050134888c8cc004004010896600200310048994c004dd71809000cdd59809800ccc00c00cc05c009004180a800a026918089809180918091809000cdc3a40029111111111111111114c004c08c04a6044025222232330010010052259800800c4cc09ccdd81ba9005374c00897adef6c608994c004dd71812800cdd59813000cc0a80092225980099b9000900389981599bb037520126e980200162b30013371e01200713259800980d98149baa00189981619bb03752014605a60546ea800400a2004813a6002013008801200e89981599bb037520066e98008cc018018005026204c1814000a04c911192cc004c050006264b3001001801c4c9660020030048024012009132598009815001c01a00a8138dd7000a0543027001409460466ea80122b300130120018992cc00400600713259800800c01200900480244c9660026054007006802a04e375c0028150c09c00502518119baa0048012040408060426ea800e44646600200200644b30010018a60103d87a8000899192cc004cdc8802800c56600266e3c014006260266604e604a00497ae08a60103d87a80004089133004004302900340886eb8c08c004c098005024488966002602600314bd6f7b63044c8c8cc0040052f5bded8c044b300100189981399bb0375200c6e9800d2f5bded8c113298009bae30250019bab302600198150012444b30013372001400713302b337606ea4028dd3003802c56600266e3c02800e26605666ec0dd48051ba600700189981599bb037520066e98008cc018018005026204c1814000a04c32330010014bd6f7b630112cc00400626604c66ec0dd48021ba80034bd6f7b63044ca60026eb8c0900066eb4c09400660520049112cc004cdc8004001c4cc0a8cdd81ba9008375000e00b15980099b8f00800389981519bb037520106ea001c00626605466ec0dd48019ba80023300600600140948128604e002812901f49660026022603e6ea80062942294501d48896600200514a11329800992cc004c054c08cdd5000c4dd6981218139bab3027302437540031480010211813000cdd798131813800cdd5801a444b30010018acc004c00801a26600a0069000452820468992cc004cdd79813000a610140008acc004cc018010dd6981398151bab3027001898019ba6302b0028a5040911598009980300224001130030078a5040908120c0a40050270ca60020030049119813801198139ba60014bd7020022225980080144cc005300103d87a80004bd6f7b63044ca60026eb8c0940066eacc09800660540069112cc004cdc8a441000038acc004cdc7a44100003899802980b998159ba60024bd70000c4cc015300103d87a8000006409919800803c006446600e0046605a66ec0dd48029ba6004001401c813060500048132294229422941027488c966002602260426ea8006266e24dd6981298111baa0010028a50407c604860426ea8c038c084dd500148888c8cc0040040148966002003133027337606ea4014dd400225eb7bdb1822653001375c604a003375a604c003302a00248896600266e4002400e26605666ec0dd48049ba80080058acc004cdc7804801c4c966002603660526ea800626605866ec0dd4805181698151baa0010028801204e9800804c022004803a26605666ec0dd48019ba8002330060060014098813060500028132600c00d29800800d2f5c122298008014006444660506e9ccc0a0dd4803198141ba900333028375000497ae000140208022444b30010028a6103d87a80008acc004c04c0062602066048604a00497ae08cc00400e604c005337000029000a006407c8119222222222222298009817806cc0bcc0c003644453001004801c00a4453001003800c009004201e9112cc004c080c0b8dd5001c4c9660020030028992cc004006264b300100180244c966002003159800981b801466002007132598009812800c4c9660020030078992cc0040062b3001303a0028992cc004c0a0006264b300100180544c966002003159800981e80146600200300c805a02e805a074805c02e01700b40f8607600281c8c0dcdd50014566002604c00313259800800c02a264b3001001805c02e0171332259800800c036264b3001001807403a01d1332259800800c042264b3001001808c046023132598009822001c04e0248208dd6800c0450441820800a07e375a002608000500e4104607c00281e0dd6800981e801402d03e181d800a0723037375400500940d081a0c0d4dd5000c02103740220110088042076303800140d860686ea800a2b300130230018acc004c0d0dd5001401e00c81aa00c818903118191baa001802a022802a068802c01600b00540e0606a0028198c0d400a007003801c00d0361819800a062302f375400700140b12223259800980f98179baa0018a40011375a606660606ea800502d192cc004c07cc0bcdd5000c530103d87a8000899198008009bab30343031375400444b30010018a6103d87a8000899192cc004cdc8803000c56600266e3c018006260446606c606800497ae08a60103d87a800040c5133004004303800340c46eb8c0c8004c0d4005033205a3300c00300294c005220100a44100800a0129192cc00400604b1325980098198014400604c8180dd61818800a05e300337566020605a6ea80066002002911111114c004c0ccdd5003c8c8cc004004008896600200314bd6f7b63044ca60026eb8c0dc0066eacc0e00066600600660780049112cc00400a2a66072920124657870656374205061697228702c205b5f2c202e2e5d206173207829203d20696e6e657200168cc004006007323200432330010010042259800800c5268992cc0040062b30013004375a607e6084005149a2a6607a92011f76616c756520646f65736e2774207361746973667920707265646963617465001640f1133225980099b90375c60800046eb8c1000062b30013006375a60820051330050053304300130450038a9981fa491f76616c756520646f65736e2774207361746973667920707265646963617465001640f9153303f491276b65797320696e207061697273206172656e277420696e20617363656e64696e67206f72646572001640f8608400460840028200c10800503f14c004c0b400694294503948894cc0f12401234475706c696361746520706f6c69637920696e20746865206173736574206c6973742e0016403481e0607400281c24464b3001001818c4c9660026078005159800cc004c09e60026eacc094c0e0dd51812981c1baa001801d2210b73657474696e67734e46540040214a14a281aa2a6606c9213f54686572652073686f756c642062652065786163746c79206f6e652073657474696e6773204e465420696e20746865207265666572656e636520696e70757400168992cc0040062b300130243038375400313259800800c0ca264b3001303f0028acc0040062b3001302c303a375400313259800800c0de264b30010018992cc00400607313259800800c0ea07503a899912cc00400607913259800800c0f607b03d8992cc004c11c00e330010078804c0f901440f90441bad00181ea08e304400141086eb4004c10c00a0748220c10400503f182080140e207103881c2084303f00140f460766ea800606c81c206d03681b40d904040cd03c181e800a0763039375400303140d9031818c0c606281f0c090c0e0dd51812981c1baa00140d503240e4607400281c0dd61811981b1baa002911919800800801112cc0040062946264664466446600400400244b30010018801c4ca60026eb8c0f40066eb4c0f80066600600660840049112cc004cdc44c0040360110034044005159800800c5284528207c8acc0040062946294103e207c1820000a07c375660760066eb8c0e0004cc00c00cc0f4008c0ec00503949660020031598009810181a1baa0018992cc00400605d13259800981d80145660020031598009814181b1baa0018992cc00400606313259800800c4c9660020030338992cc004006264b300100181ac4c96600200313259800800c0de264b300100181c40e20711332259800800c0ea264b300100181dc0ee0771332259800800c0f6264b30010018992cc004c1180062b30013371290021822800c0fe26644b3001001820c4c9660020030428992cc004c13800e330010128cc00404226644b3001303d0018992cc00400608d13259800800c56600260a400519800800c01208e80fa08e827a08f047823c11d0531828000a09c304c3754021159800981d800c56600260986ea80420050454135045412482484cc0cc00489660020051016899192cc00400608f047823c11e26644b3001001824c4cc0e4dd5800912cc00400a2600e60ac0111323259800800c13609b04d826c4cc896600200304f827c13e264600c60b600e6eb400609e82d8dd7000982a00120b230520013055002414d049824c1250551bae001304e002414c6098002609e0048268c124dd5007410d01b410d028410d04b1bab001821410a0848270c12c005049181a98228009825001a08681fa08e375400303e81f40fa07c8250c11c0050451bad001304600281da08e304400141086eb4004c10c00a0708220c10400503f182080140da06d03681b2084303f00140f4607e00503481a40d20688200c0f400503b181e80140ca065032819207c303b00140e4606e6ea800606081a206103081840c103c40bd038181c800a06e3035375400302d40c902d816c0b605a81d24444b300130290018802466002009003991900118080009981d19bb037520046ea00052f5bded8c122232598009811000c530103d87a8000898151981f1ba60014bd7020729800801401600922232598009818000c530103d87a800089816998209ba80014bd70207833700002004809900a206a911192cc004c0a4c0dcdd5000c4c96600266ebcc0f0c0e4dd5000802440062a6606e92011161646472657373206d6973736d61746368001640d8607660706ea80062a6606c92012c65787065637420536f6d65286f757470757429203d206f757470757473207c3e206c6973742e617428617429001640d4660080060029111111192cc004c0ac0222646644b3001013899912cc004c0c80062b30013041375402b00281aa0848acc004c0c00062b30013041375402b00281aa0848acc004c0b00062b30013041375402b00281aa0848acc004cdc3a400c00315980098209baa01580140d5042456600266e1d20080018acc004c104dd500ac00a06a821206a81f103e207c40f881f05660026060607c6ea80062646644b30013031304137540051323259800800c0e6264b300130490028992cc004c0d4dd6982300144c966002607000313259800acc0066002606e608e6ea8c0c0c120dd5003d28528a08a8a518a9982324811b69735f646174756d5f6e6f745f6d6572676564203f2046616c73650014a0822a2b30015980099baf007301030343048375400314a315330464911969735f646174756d5f7468655f73616d65203f2046616c73650014a0822a2b30015980099810981918241baa028375a605660906ea801e29462a6608c9211d69735f74785f6265666f72655f646561646c696e65203f2046616c73650014a0822a2b300159800998069bab3035304837540026eacc0d4c120dd5004c528c54cc1192412369735f76616c75655f6772617465725f7468616e5f6265666f7265203f2046616c73650014a0822a2b3001337126466002002603e6eacc0d8c124dd5001112cc0040062900044cdc02400466004004609c0028259201e8a518a9982324811e6172655f706f6c69636965735f6c6573735f7468616e203f2046616c73650014a0822a29410454528208a8a50411514a0822a60026eb0c0ccc11cdd5013cc128c11cdd50045200040351332259800981c001c4c966002b3001325980099baf0013232303b3304f30500023304f30500013304f3039304d375400660a260a200260a000260966ea802a26006606e60966ea800629410481809181b18251baa0018a518a998242491a69735f6e65775f646174756d5f76616c6964203f2046616c73650014a0823a2b300159800cc004dd5981b98251baa0019ba6330033756606e60946ea802cc06520809bee029119b87002001409114a3153304849011b69735f7574786f5f76616c75655f76616c6964203f2046616c73650014a0823a2b30015980099811981a18251baa02a375a605a60946ea802629462a660909211d69735f74785f6265666f72655f646561646c696e65203f2046616c73650014a0823a2b300130253036304a375401314a31533048490121636f6e7472696275746f725f69736e745f61737369676e6564203f2046616c73650014a0823a29410474528208e8a50411d30013758606a60926ea80a6609860926ea802a9000201e899912cc004c0d801626644b300159800cc004c0f0c130dd5181a98269baa00ca50a51412914a3153304b49011b69735f646174756d5f6e6f745f6d6572676564203f2046616c73650014a082522b300159800998019bac3004304d375405a60a0609a6ea803229462a660969211a69735f7369676e65645f62795f61646d696e203f2046616c73650014a082522b30015980099baf30153039304d375400464646464646080660a860aa00a660a860aa008660a860aa006660a860aa004660a860aa002660a930014a34c103d87a8000a60103d8798000413c60ac60ac00260aa00260a800260a600260a4002609a6ea803229462a660969211a69735f6e65775f646174756d5f76616c6964203f2046616c73650014a082522b300159800cc004dd5981d18269baa0029828000c88cdc3801000a04e8a518a99825a491b69735f7574786f5f76616c75655f76616c6964203f2046616c73650014a082522b30015980099813181b98269baa02d375a6060609a6ea803229462a660969211d69735f74785f6265666f72655f646561646c696e65203f2046616c73650014a082522b3001598009802981c98269baa00c8a518a99825a491f636f6e7472696275746f725f69735f61737369676e6564203f2046616c73650014a082522b3001598009980b1bab303a304d3755300137586072609a6ea80b66074609a6ea803290022026301c482026fb80a29462a6609692012169735f6d61696e7461696e65725f6d696e6164615f70616964203f2046616c73650014a082522b30013301637566074609a6eaa60026eb0c0e4c134dd5016cc140c134dd51980b816824d2002404c6eacc140c14400629462a660969211a69735f7265776172645f6665655f70616964203f2046616c73650014a08252294104a452820948a50412914a08252294104a452820948a50412930013758606e60966ea80ae609c60966ea80329000202232323304f30500013304f305030510014bd704c004cc014dd5981c98261baa00d301b483fed770166609c6e98cc0166002015007a40048140c06d20809bee023304e4c0101a0004bd70488a60020050019112cc004cdc780300844006264660aa6e98cc030dd5982b0014c00401e009337020060028178cc154dd3198061bab305630570029800803c01200281792f5c066e0ccdc1001003a4141380282790342060375a607660966ea802a2b30013370e9003002c4c8cc8966002b30019800981e98269baa3036304e375401b4a14a2825a29462a660989211b69735f646174756d5f6e6f745f6d6572676564203f2046616c73650014a0825a2b300159800998021bac3005304e375405c60a2609c6ea803629462a660989211a69735f7369676e65645f62795f61646d696e203f2046616c73650014a0825a2b300159800992cc004c100c138dd5000c566002b30013301837566078609e6eaa60026eb0c0ecc13cdd5017cc148c13cdd5000d20024054603c90404df7014528c54cc13524012069735f636f6e7472696275746f725f7061795f76616c6964203f2046616c73650014a082622b30010028a518a99826a4811f69735f6d61696e7461696e65725f7061795f76616c6964203f2046616c73650014a08262294104c456600200514a3153304d49011f69735f6d61696e7461696e65725f7061795f76616c6964203f2046616c73650014a0826104c181d18271baa00d8a518a998262491a6172655f7061796d656e74735f76616c6964203f2046616c73650014a0825a2b30015980098181bad305130520028acc004cdc79bae3051002009899b8f375c60a200601914a0825a294104b4528c54cc13124012069735f626f756e74795f69645f746f6b656e5f6275726e74203f2046616c73650014a0825a294104b452820968a50412c60a00026602a6eacc0e4c130dd54c004dd6181c18261baa02c981c98261baa00ba40008090c05cdd5981f18261baa00b301902b8992cc004c0f4c12cdd5000c4c8c966002b3001303d304d3754606c609c6ea803629462a6609892114646174756d2e6d6572676564203f2046616c73650014a0825a2b300159800acc004c0c0dd698289829000c56600266e3cdd71828800804c4cdc79bae305100200c8a50412d14a0825a29462a660989212069735f626f756e74795f69645f746f6b656e5f6275726e74203f2046616c73650014a0825a2b30013301737566076609c6eaa60026eb0c0e8c138dd50174c144c138dd5001d20004051300137566076609c6ea803e019009a400280aa29462a6609892012069735f636f6e7472696275746f725f7061795f76616c6964203f2046616c73650014a0825a294104b452820963051001301a02c8a9982524813c65787065637420536f6d6528636f6e7472696275746f725f6164647265737329203d20646174756d2e636f6e7472696275746f725f6164647265737300164124606e60966ea802904820902304d304e304e304e304e304e304e304e304e0012259800981e18251baa0018991919800800802112cc00400629422b30013371e6eb8c14400400e294626600400460a4002825904f1bae304e304b375400315330494912d65787065637420566572696669636174696f6e4b657928766b29203d20766572696669636174696f6e5f6b657900164120823088ca60020030038012002222598008014400626530010049828801e6002005375c60980033756609a0032223259800981b800c530103d87a80008981f998299ba60014bd70209c329800800c00e00480088896600200510018994c00401260b000798008014dd71829800cdd6982a000c888c966002609200314c103d87a8000898231982d1ba80014bd7020aa337000040028161004182b00120a840b08020c13c00904d12cc004c0e4c11cdd5000c528c528208a4110608a6ea806a0768218dd71822000c0e90461823800a08a3259800981998219baa0018a5eb7bdb18226eacc11cc110dd5000a082330203756606060866ea8010004dd7182298211baa0028a99820249496578706563742053637269707428626f756e74795f69645f706f6c69637929203d207363726970745f696e7075742e616464726573732e7061796d656e745f63726564656e7469616c001640fc608660806ea8c10cc100dd5000982198201baa002302c303f375464b300100181b44c966002608a005100181ba0843043001410464660020026eb0c10cc100dd5010112cc004006297ae0899912cc00566002606460846ea8c118c10cdd5182318219baa30303043375400514a314a0820226608a0046600800800313300400400141006088002608a00282122a6607a92011a65787065637420536f6d6528646174756d29203d20646174756d001640f0607c6ea804e067033819c0cd044182000098201820800981e1baa00f8acc004c0b4022264653001375c6082003375a60826084003375c6082607c6ea80466eb8c1040092222598009812001c528c4c8cc8966002b3001337126eb4c0c8c114dd5000cc004dd5981918229baa98009bac30313045375404b3048304537540034800900b522100a44100405514a315330434911c69735f6372656174696f6e5f6665655f70616964203f2046616c73650014a082122b300159800981a0034528c54cc10d24012b69735f6d696e74696e675f6f6e6c795f6f6e655f626f756e74795f69645f746f6b656e203f2046616c73650014a082122b300159800acc00566002b3001303430443754605a608a6ea800a2942330014a14a14a282110424528c54cc10d2411d646174756d2e6d6572676564203d3d2046616c7365203f2046616c73650014a082122b3001598009980f181798229baa025375a6050608a6ea800a29462a660869214069735f74785f6265666f72655f646561646c696e652874782e76616c69646974795f72616e67652c20646174756d2e646561646c696e6529203f2046616c73650014a082122b3001598009810181898229baa0028a518a99821a492a69735f6e6f6e6528646174756d2e636f6e7472696275746f725f6164647265737329203f2046616c73650014a082122b30013370e6eb4c0d4c114dd50011bad30313045375400314a315330434912d646174756d2e626f756e74795f7265776172645f666565203d3d207265776172645f666565203f2046616c73650014a082122941042452820848a50410914a3153304349011376616c69645f646174756d203f2046616c73650014a082122b300159800998051bab30323045375400730013014482026fb80a009007a4004806229462a6608692011376616c69645f76616c7565203f2046616c73650014a082122b3001980098081bab303730453754005374d300137566064608a6ea800e009007a400280624466e1c00800501f4528c54cc10d2411576616c69645f6465706f736974203f2046616c73650014a082122941042452820848a50410914a08210c02cc0bcc10cdd50009980681181fcc004dd6181718211baa02298181982219ba548008cc110dd4800a5eb80cc111300103d87a80004bd7052000402081f8608200260140391640e481c88966002b3001330060020018a518a9981da48118677265617465725f6f725f657175616c203f2046616c73650014a081d22b30019800cc00400a6e980064466e1c008005017528528a0748a518a9981da481156172655f646966666572656e74203f2046616c73650014a081d2294103a045268a99805a491856616c696461746f722072657475726e65642066616c7365001365640282611e581c7fb24b2713a4ec77eaa49bc8cafe4092b4be19672a82528ba899a2d80001",
+            "scriptversion": 3,
+            "settingsmintingversion": 3,
+            "utxoref": "d1b9de0e40d4b24cc9eceb3e9c6facd1a021096754c8f9b959a8919fca4b3e3e#1",
+        });
+
+        let resolved = attempt_resolve_gh_deploy(&args).await.unwrap();
+
+        let tx = hex::decode(resolved["tx"].as_str().unwrap()).unwrap();
+
+        let _ = pallas::ledger::traverse::MultiEraTx::decode(&tx).unwrap();
+    }
+
+    #[tokio::test]
+    async fn test_resolve_gh_deploy_missing_args() {
+        let args = json!({});
+
+        let resolved = attempt_resolve_gh_deploy(&args).await;
+
+        let err = resolved.unwrap_err();
+
+        dbg!(&err);
+
+        assert_eq!(err.code(), Error::CODE_MISSING_TX_ARG);
+    }
+
+    #[tokio::test]
+    async fn test_resolve_gh_deploy_invalid_args() {
+        let args = json!({
+            "script": "",
+            "githoneyaddr": "",
+            "githoneypaymentcredential": "",
+            "githoneystakingcredential": "",
+            "bountycreationfee": 2000000,
+            "bountyrewardfee": 500,
+            "settingsmintingpolicy": "",
+            "settingspolicyid": "",
+            "settingstokenname": "settingsNFT",
+            "githoneyscript": "",
+            "scriptversion": 3,
+            "settingsmintingversion": 3,
+            "utxoref": "",
+        });
+
+        let resolved = attempt_resolve_gh_deploy(&args).await;
+
+        let err = resolved.unwrap_err();
+
+        dbg!(&err);
+
+        assert_eq!(err.code(), ErrorCode::InvalidParams.code());
+    }
 }
